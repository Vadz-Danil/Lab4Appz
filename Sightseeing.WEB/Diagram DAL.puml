@startuml

skinparam monochrome true
skinparam classAttributeIconSize 0

package "SightSeeing.DAL" {
  package "DbContext" {
    class SightSeeingDbContext {
      +DbSet<User> Users
      +DbSet<Place> Places
      +DbSet<Review> Reviews
      +DbSet<Question> Questions
      +DbSet<Answer> Answers
      +DbSet<AdditionalInfo> AdditionalInfos
      +SightSeeingDbContext(options: DbContextOptions<SightSeeingDbContext>)
      #OnConfiguring(optionsBuilder: DbContextOptionsBuilder): void
      #OnModelCreating(modelBuilder: ModelBuilder): void
    }

    class SightSeeingDbContextFactory {
      +CreateDbContext(args: string[]): SightSeeingDbContext
    }
  }

  package "Repositories" {
    class Repository<T> {
      -DbSet<T> _dbSet
      +Repository(context: SightSeeingDbContext)
      +GetByIdAsync(id: int, eager: bool): Task<T?>
      +GetAllAsync(eager: bool): Task<IEnumerable<T?>>
      +AddAsync(entity: T?): Task
      +UpdateAsync(entity: T?): Task
      +DeleteAsync(id: int): Task
    }
  }

  package "UnitOfWork" {
    class UnitOfWork {
      -SightSeeingDbContext _context
      -IRepository<User> _users
      -IRepository<Place> _places
      -IRepository<Review> _reviews
      -IRepository<Question> _questions
      -IRepository<Answer> _answers
      -IRepository<AdditionalInfo> _additionalInfos
      +UnitOfWork(context: SightSeeingDbContext)
      +IRepository<User> Users
      +IRepository<Place> Places
      +IRepository<Review> Reviews
      +IRepository<Question> Questions
      +IRepository<Answer> Answers
      +IRepository<AdditionalInfo> AdditionalInfos
      +SaveChangesAsync(): Task<int>
      +Dispose(): void
    }
  }
}

' Dependencies
Repository .|> IRepository
UnitOfWork .|> IUnitOfWork

Repository --> SightSeeingDbContext
UnitOfWork --> SightSeeingDbContext
UnitOfWork --> IRepository

SightSeeingDbContext --> User
SightSeeingDbContext --> Place
SightSeeingDbContext --> Review
SightSeeingDbContext --> Question
SightSeeingDbContext --> Answer
SightSeeingDbContext --> AdditionalInfo

@enduml